import{_ as t,c as i,o as a,ah as e}from"./chunks/framework.DYJPYqf_.js";const o=JSON.parse('{"title":"MyBatis 符号转义","description":"","frontmatter":{},"headers":[],"relativePath":"java/mybatis.md","filePath":"java/mybatis.md","lastUpdated":1761380401000}'),l={name:"java/mybatis.md"};function d(h,s,n,p,k,r){return a(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="mybatis-符号转义" tabindex="-1">MyBatis 符号转义 <a class="header-anchor" href="#mybatis-符号转义" aria-label="Permalink to “MyBatis 符号转义”">​</a></h1><p>在 MyBatis-Plus 的 XML 映射文件中，由于 XML 本身的语法限制，某些符号需要进行转义处理，尤其是用于 SQL 条件判断的比较符号。以下是常见符号的转义方式：</p><h3 id="🔧-xml-中的符号转义表" tabindex="-1">🔧 XML 中的符号转义表 <a class="header-anchor" href="#🔧-xml-中的符号转义表" aria-label="Permalink to “🔧 XML 中的符号转义表”">​</a></h3><table tabindex="0"><thead><tr><th>符号</th><th>含义</th><th>XML 转义写法</th></tr></thead><tbody><tr><td><code>&lt;</code></td><td>小于号</td><td><code>&amp;lt;</code></td></tr><tr><td><code>&gt;</code></td><td>大于号</td><td><code>&amp;gt;</code></td></tr><tr><td><code>&lt;=</code></td><td>小于等于</td><td><code>&amp;lt;=</code></td></tr><tr><td><code>&gt;=</code></td><td>大于等于</td><td><code>&amp;gt;=</code></td></tr><tr><td><code>!=</code></td><td>不等于</td><td><code>!=</code>（无需转义）</td></tr><tr><td><code>&lt;&gt;</code></td><td>不等于（SQL写法）</td><td><code>&amp;lt;&amp;gt;</code></td></tr><tr><td><code>&amp;</code></td><td>与符号</td><td><code>&amp;amp;</code></td></tr><tr><td><code>&#39;</code></td><td>单引号</td><td><code>&amp;apos;</code></td></tr><tr><td><code>&quot;</code></td><td>双引号</td><td><code>&amp;quot;</code></td></tr></tbody></table><h3 id="✅-示例片段" tabindex="-1">✅ 示例片段 <a class="header-anchor" href="#✅-示例片段" aria-label="Permalink to “✅ 示例片段”">​</a></h3><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">select</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;selectUser&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resultType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;User&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  SELECT * FROM user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  WHERE age </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AND status </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;lt;&amp;gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &#39;inactive&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="💡-补充建议" tabindex="-1">💡 补充建议 <a class="header-anchor" href="#💡-补充建议" aria-label="Permalink to “💡 补充建议”">​</a></h3><ul><li><p>如果你使用的是 <code>&lt;![CDATA[ ... ]]&gt;</code> 包裹 SQL，可以避免转义问题：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">select</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;selectUser&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resultType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;User&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &lt;![CDATA[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    SELECT * FROM user</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    WHERE age &gt; 18</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      AND status &lt;&gt; &#39;inactive&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ]]&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ul><p>这种方式更适合复杂 SQL，尤其是包含大量比较符号时。</p>`,9)])])}const E=t(l,[["render",d]]);export{o as __pageData,E as default};
